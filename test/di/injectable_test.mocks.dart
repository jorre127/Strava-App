// Mocks generated by Mockito 5.0.15 from annotations
// in flutter_template/test/di/injectable_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_template/model/webservice/activity/activity.dart'
    as _i6;
import 'package:flutter_template/model/webservice/club/club.dart' as _i2;
import 'package:flutter_template/model/webservice/member/member.dart' as _i5;
import 'package:flutter_template/repository/club_detail/club_detail_repository.dart'
    as _i3;
import 'package:flutter_template/repository/login/login_repository.dart' as _i7;
import 'package:flutter_template/repository/secure_storage/auth/auth_storage.dart'
    as _i9;
import 'package:flutter_template/webservice/club/club_webservice.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeClub_0 extends _i1.Fake implements _i2.Club {}

/// A class which mocks [ClubDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockClubDetailRepository extends _i1.Mock
    implements _i3.ClubDetailRepository {
  MockClubDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Club> getClub(String? clubId) =>
      (super.noSuchMethod(Invocation.method(#getClub, [clubId]),
              returnValue: Future<_i2.Club>.value(_FakeClub_0()))
          as _i4.Future<_i2.Club>);
  @override
  _i4.Future<List<_i5.Member>> getMembers(String? clubId) =>
      (super.noSuchMethod(Invocation.method(#getMembers, [clubId]),
              returnValue: Future<List<_i5.Member>>.value(<_i5.Member>[]))
          as _i4.Future<List<_i5.Member>>);
  @override
  _i4.Future<List<_i5.Member>> getAdmins(String? clubId) =>
      (super.noSuchMethod(Invocation.method(#getAdmins, [clubId]),
              returnValue: Future<List<_i5.Member>>.value(<_i5.Member>[]))
          as _i4.Future<List<_i5.Member>>);
  @override
  _i4.Future<List<_i6.Activity>> getActivites(String? clubId) =>
      (super.noSuchMethod(Invocation.method(#getActivites, [clubId]),
              returnValue: Future<List<_i6.Activity>>.value(<_i6.Activity>[]))
          as _i4.Future<List<_i6.Activity>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i7.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isLoggedIn() =>
      (super.noSuchMethod(Invocation.method(#isLoggedIn, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<void> login() => (super.noSuchMethod(Invocation.method(#login, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ClubWebService].
///
/// See the documentation for Mockito's code generation for more information.
class MockClubWebService extends _i1.Mock implements _i8.ClubWebService {
  MockClubWebService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Club> getClub(String? id) =>
      (super.noSuchMethod(Invocation.method(#getClub, [id]),
              returnValue: Future<_i2.Club>.value(_FakeClub_0()))
          as _i4.Future<_i2.Club>);
  @override
  _i4.Future<List<_i5.Member>> getClubMembers(String? id) =>
      (super.noSuchMethod(Invocation.method(#getClubMembers, [id]),
              returnValue: Future<List<_i5.Member>>.value(<_i5.Member>[]))
          as _i4.Future<List<_i5.Member>>);
  @override
  _i4.Future<List<_i5.Member>> getClubAdmins(String? id) =>
      (super.noSuchMethod(Invocation.method(#getClubAdmins, [id]),
              returnValue: Future<List<_i5.Member>>.value(<_i5.Member>[]))
          as _i4.Future<List<_i5.Member>>);
  @override
  _i4.Future<List<_i6.Activity>> getClubActivities(String? id) =>
      (super.noSuchMethod(Invocation.method(#getClubActivities, [id]),
              returnValue: Future<List<_i6.Activity>>.value(<_i6.Activity>[]))
          as _i4.Future<List<_i6.Activity>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [AuthStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthStorage extends _i1.Mock implements _i9.AuthStorage {
  MockAuthStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(Invocation.method(#getRefreshToken, []),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<String?> getAccessToken() =>
      (super.noSuchMethod(Invocation.method(#getAccessToken, []),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<void> clear() => (super.noSuchMethod(Invocation.method(#clear, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> saveUserCredentials(
          {String? accessToken, String? refreshToken}) =>
      (super.noSuchMethod(
          Invocation.method(#saveUserCredentials, [],
              {#accessToken: accessToken, #refreshToken: refreshToken}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<bool> hasLoggedInUser() =>
      (super.noSuchMethod(Invocation.method(#hasLoggedInUser, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
